=head1 NAME

WWW::Quvi - Perl extension interface for libquvi

=head1 SYNOPSIS

  use WWW::Quvi;

  my $q = new WWW::Quvi::Query;
  my $m = $query->parse($url);

  croak "error: $q->{errmsg}\n" unless $m->{ok};

=head1 DESCRIPTION

WWW::Quvi provides a Perl interface to libquvi, a small C library for
parsing Flash media stream URLs.

=head1 DOCUMENTATION

This module provides a Perl interface to libquvi. This documentation
contains the Perl specific details and some sample code. The libquvi
documentation should be consulted for the API details at
L<http://quvi.sourceforge.net/>.

=head1 WWW::Quvi::version

A wrapper function that returns WWW::Quvi version and libquvi version
information.

  WWW::Quvi::version;                           # Module version
  WWW::Quvi::version(WWW::Quvi::ModuleVersion); # Ditto.
  WWW::Quvi::version(WWW::Quvi::libquviVersion);
  WWW::Quvi::version(WWW::Quvi::libquviVersionLong);

=head1 WWW::Quvi::Options

A container hash for the options used with libquvi that would normally
(using the C API) be set with C<quvi_setopt(3)>.

  $opts->{verbose_libcurl} = 1;                    # Default: 0
  $opts->{user_agent}      = 'Foo/1.0';            # Default: ""
  $opts->{http_proxy}      = 'http://foo:1234';    # Default: ""
  $opts->{category}        = WWW::Quvi::ProtoHttp; # Default: ProtoAll
  $opts->{resolve}         = 0;                    # Default: 1
  $opts->{format}          = 'best';               # Default: "default"
  $opts->{verify}          = 0;                    # Default: 1

=head1 WWW::Quvi::Media

A container hash that holds the parsed media details accessible using
C<quvi_getprop(3)>.

  $media->{content_length}  - Content length as returned by the server
  $media->{thumbnail_url}   - Thumbnail URL (if any)
  $media->{content_type}    - Content-type as returned by the server
  $media->{file_suffix}     - File suffix parsed from the content-type
  $media->{start_time}      - Start time for media (if any)
  $media->{page_title}      - Media title
  $media->{page_url}        - Page URL
  $media->{duration}        - Duration in msec (if any)
  $media->{host}            - Host string
  $media->{url}             - Media stream URL
  $media->{id}              - Media ID
  $media->{ok}              - Non-zero value if parsing succeeded

=head1 WWW::Quvi::Query

=over 4

=item parse($url)

Parse media details for URL. Returns WWW::Quvi::Media object.

  my $m = $q->parse($url);

=item ($rc, $domain, $formats) next_website()

Return next supported website. The returned tuple will hold return code
($rc), domain string and the formats string.

Please note that the formats string has very little use as of
libquvi 0.2.17. This function is best suited for getting a list of the
supported websites.

Use the C<formats> function (below) instead if you need to know which
formats are available to an URL.

  while (1) {
    my ($done, $domain) = $q->next_website;
    last if $done;
    print "$domain\n";
  }

=item ($rc, $formats) formats($url)

Return a list of formats available to an URL.

  my ($rc, $formats) = q->formats($url);
  croak "error: $q->{errmsg}\n" unless $rc == WWW::Quvi::OK;
  print "$_\n" foreach (split /\|/, $formats);

=item set_opts($opts)

Set Query options (see also L</WWW::Quvi::Options>).

=item supported($url)

Returns a non-zero value if the URL is not supported.

=back

=head1 NOT IMPLEMENTED

=over 4

=item B<Linked list interface>

=item B<Network interface>

=item B<Media segments>

=item B<Callbacks>

=back

=head1 WWW

 Home  : http://www-quvi.sourceforge.net/
 gitweb: http://repo.or.cz/w/www-quvi.git

=head1 LICENSE

WWW::Quvi is free software, licensed under the LGPLv2.1+.

=head1 SEE ALSO

C<quvi(1)>

=head1 AUTHOR

Toni Gundogdu <legatvs at sign gmail com>
